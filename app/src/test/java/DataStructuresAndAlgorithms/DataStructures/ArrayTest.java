/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package DataStructuresAndAlgorithms.DataStructures;

import org.junit.jupiter.api.Test;

import DataStructuresAndAlgorithms.DataStructures.Arrays.*;

import static org.junit.jupiter.api.Assertions.*;

class ArrayTest {
    DynamicIntArray arr = new DynamicIntArray();
    DynamicArray<String> arr_generic = new DynamicArray<String>();

    @Test
    void DynamicIntArrayHasInitialCapacityOf16() {

        assertEquals(16, arr.getCapacity(), "The array should have an allocated capacity of 16");
    }

    @Test
    void DynamicIntArrayCanIncreasesInSize() {
        // Add 15 Elements to the array
        for (int i = 1; i < 16; i++) {
            arr.add(i);
        }
        assertEquals(16, arr.getCapacity(), "The array should STILL have a capacity of 16");

        // Add the 16th element
        arr.add(16);

        // Check if Size has doubled
        assertEquals(32, arr.getCapacity(), "The array should have a capacity of 32");
        assertEquals(16, arr.getSize(), "The array should have a length of 16");

    }

    @Test
    void DynamicArrayGenericTest() {
        // Add 15 Elements to the array
        for (int i = 1; i < 3; i++) {
            arr_generic.add(i + "_string");
        }
        assertEquals("[1_string, 2_string]", String.valueOf(arr_generic.toString()));

    }
}
